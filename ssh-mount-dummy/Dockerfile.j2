FROM {{ parent }}
LABEL MAINTAINER="Rasmus Munk <rasmus.munk@nbi.ku.dk>"

ARG USERNAME=mountuser
ARG PASSWORD=Passw0rd!
ARG AUTHORIZED_KEYS_DIR=/authorized-keys
ARG TZ=Europe/Copenhagen
ENV TZ=${TZ}

RUN apt-get update \
    && apt-get install -yq --no-install-recommends \
    openssh-server \
    python3-dev \
    python3-pip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Remove generated host SSH keys
RUN rm -fr /etc/ssh/ssh_host_*

# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \
    && mkdir -p /run/sshd

COPY main.py /app/main.py
COPY requirements.txt /app/requirements.txt
COPY utils /app/utils

COPY ./ssh-mount-dummy/config/sshd_config /etc/ssh/sshd_config

WORKDIR /app

RUN pip3 install setuptools wheel --break-system-packages \
    && pip3 install -r requirements.txt --break-system-packages

ENV USERNAME=${USERNAME}
ENV PASSWORD=${PASSWORD}

RUN useradd -ms /bin/bash ${USERNAME}
RUN echo "${USERNAME}:${PASSWORD}" | chpasswd

ENV AUTHORIZED_KEYS_DIR=${AUTHORIZED_KEYS_DIR}
# Create the designated SSH directory where the HOST 
# can mount in external SSH keys
RUN mkdir -p ${AUTHORIZED_KEYS_DIR}

# Add the Docker Entrypoing script
ADD docker-entry.sh /app/docker-entry.sh
RUN chmod +x /app/docker-entry.sh

EXPOSE 22
CMD ["bash", "/app/docker-entry.sh"]
